/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'lavr' at '3/6/17 11:42 PM' with Gradle 3.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'

ext.lwjglVersion = "2.9.3"

version = '1.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8

mainClassName = "rtype.Prototyp"

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Version': version,
                'Main-Class': 'rtype.Prototyp'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile "org.lwjgl.lwjgl:lwjgl:${lwjglVersion}"
    compile "org.lwjgl.lwjgl:lwjgl_util:${lwjglVersion}"
    compile "org.lwjgl.lwjgl:lwjgl-platform:${lwjglVersion}:natives-linux"

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    // testCompile 'junit:junit:4.12'
}
